// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_struct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "db_struct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DBItemDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBItemData> {
} _DBItemData_default_instance_;
class DBItemDataListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBItemDataList> {
} _DBItemDataList_default_instance_;
class DBSkillDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBSkillData> {
} _DBSkillData_default_instance_;
class DBSkillDataListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBSkillDataList> {
} _DBSkillDataList_default_instance_;
class DBTaskDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBTaskData> {
} _DBTaskData_default_instance_;
class DBTaskDataListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBTaskDataList> {
} _DBTaskDataList_default_instance_;
class DBDailyTaskDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBDailyTaskData> {
} _DBDailyTaskData_default_instance_;
class DBDailyTaskDataListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBDailyTaskDataList> {
} _DBDailyTaskDataList_default_instance_;
class DBActivityDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBActivityData> {
} _DBActivityData_default_instance_;
class DBActivitiesDataListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBActivitiesDataList> {
} _DBActivitiesDataList_default_instance_;

namespace protobuf_db_5fstruct_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemData, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemData, unique_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemData, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBItemDataList, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillDataList, skills_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, task_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, task_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, task_param2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskDataList, tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskData, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskData, task_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskData, task_param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDailyTaskDataList, daily_tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, activity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, activity_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivitiesDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivitiesDataList, activities_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DBItemData)},
  { 7, -1, sizeof(DBItemDataList)},
  { 12, -1, sizeof(DBSkillData)},
  { 18, -1, sizeof(DBSkillDataList)},
  { 23, -1, sizeof(DBTaskData)},
  { 31, -1, sizeof(DBTaskDataList)},
  { 36, -1, sizeof(DBDailyTaskData)},
  { 43, -1, sizeof(DBDailyTaskDataList)},
  { 48, -1, sizeof(DBActivityData)},
  { 54, -1, sizeof(DBActivitiesDataList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBItemData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBItemDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBSkillData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBSkillDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBTaskData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBTaskDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBDailyTaskData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBDailyTaskDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBActivityData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBActivitiesDataList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "db_struct.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
  const ::google::protobuf::Descriptor* DBItemDataList_ItemsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[1].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DBItemDataList_ItemsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int64,
            ::DBItemData,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                DBItemDataList_ItemsEntry_descriptor));
  const ::google::protobuf::Descriptor* DBSkillDataList_SkillsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[4].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DBSkillDataList_SkillsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::DBSkillData,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                DBSkillDataList_SkillsEntry_descriptor));
  const ::google::protobuf::Descriptor* DBTaskDataList_TasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[7].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DBTaskDataList_TasksEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::DBTaskData,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                DBTaskDataList_TasksEntry_descriptor));
  const ::google::protobuf::Descriptor* DBDailyTaskDataList_DailyTasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[10].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DBDailyTaskDataList_DailyTasksEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::DBDailyTaskData,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                DBDailyTaskDataList_DailyTasksEntry_descriptor));
  const ::google::protobuf::Descriptor* DBActivitiesDataList_ActivitiesEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[13].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DBActivitiesDataList_ActivitiesEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::DBActivityData,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                DBActivitiesDataList_ActivitiesEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _DBItemData_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DBItemDataList_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DBSkillData_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _DBSkillDataList_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _DBTaskData_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _DBTaskDataList_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _DBDailyTaskData_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _DBDailyTaskDataList_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _DBActivityData_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _DBActivitiesDataList_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DBItemData_default_instance_.DefaultConstruct();
  _DBItemDataList_default_instance_.DefaultConstruct();
  _DBSkillData_default_instance_.DefaultConstruct();
  _DBSkillDataList_default_instance_.DefaultConstruct();
  _DBTaskData_default_instance_.DefaultConstruct();
  _DBTaskDataList_default_instance_.DefaultConstruct();
  _DBDailyTaskData_default_instance_.DefaultConstruct();
  _DBDailyTaskDataList_default_instance_.DefaultConstruct();
  _DBActivityData_default_instance_.DefaultConstruct();
  _DBActivitiesDataList_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017db_struct.proto\"=\n\nDBItemData\022\017\n\007type_"
      "id\030\001 \001(\005\022\021\n\tunique_id\030\002 \001(\003\022\013\n\003num\030\003 \001(\005"
      "\"v\n\016DBItemDataList\022)\n\005items\030\001 \003(\0132\032.DBIt"
      "emDataList.ItemsEntry\0329\n\nItemsEntry\022\013\n\003k"
      "ey\030\001 \001(\003\022\032\n\005value\030\002 \001(\0132\013.DBItemData:\0028\001"
      "\".\n\013DBSkillData\022\020\n\010skill_id\030\001 \001(\005\022\r\n\005lev"
      "el\030\002 \001(\005\"|\n\017DBSkillDataList\022,\n\006skills\030\001 "
      "\003(\0132\034.DBSkillDataList.SkillsEntry\032;\n\013Ski"
      "llsEntry\022\013\n\003key\030\001 \001(\005\022\033\n\005value\030\002 \001(\0132\014.D"
      "BSkillData:\0028\001\"Z\n\nDBTaskData\022\017\n\007task_id\030"
      "\001 \001(\005\022\022\n\ntask_state\030\002 \001(\005\022\022\n\ntask_param\030"
      "\003 \001(\005\022\023\n\013task_param2\030\004 \001(\005\"v\n\016DBTaskData"
      "List\022)\n\005tasks\030\001 \003(\0132\032.DBTaskDataList.Tas"
      "ksEntry\0329\n\nTasksEntry\022\013\n\003key\030\001 \001(\005\022\032\n\005va"
      "lue\030\002 \001(\0132\013.DBTaskData:\0028\001\"J\n\017DBDailyTas"
      "kData\022\017\n\007task_id\030\001 \001(\005\022\022\n\ntask_state\030\002 \001"
      "(\005\022\022\n\ntask_param\030\003 \001(\005\"\225\001\n\023DBDailyTaskDa"
      "taList\0229\n\013daily_tasks\030\001 \003(\0132$.DBDailyTas"
      "kDataList.DailyTasksEntry\032C\n\017DailyTasksE"
      "ntry\022\013\n\003key\030\001 \001(\005\022\037\n\005value\030\002 \001(\0132\020.DBDai"
      "lyTaskData:\0028\001\"=\n\016DBActivityData\022\023\n\013acti"
      "vity_id\030\001 \001(\005\022\026\n\016activity_state\030\002 \001(\005\"\225\001"
      "\n\024DBActivitiesDataList\0229\n\nactivities\030\001 \003"
      "(\0132%.DBActivitiesDataList.ActivitiesEntr"
      "y\032B\n\017ActivitiesEntry\022\013\n\003key\030\001 \001(\005\022\036\n\005val"
      "ue\030\002 \001(\0132\017.DBActivityData:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1037);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db_struct.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_db_5fstruct_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBItemData::kTypeIdFieldNumber;
const int DBItemData::kUniqueIdFieldNumber;
const int DBItemData::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBItemData::DBItemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBItemData)
}
DBItemData::DBItemData(const DBItemData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unique_id_, &from.unique_id_,
    reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&unique_id_) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:DBItemData)
}

void DBItemData::SharedCtor() {
  ::memset(&unique_id_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&unique_id_) + sizeof(num_));
  _cached_size_ = 0;
}

DBItemData::~DBItemData() {
  // @@protoc_insertion_point(destructor:DBItemData)
  SharedDtor();
}

void DBItemData::SharedDtor() {
}

void DBItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBItemData::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[0].descriptor;
}

const DBItemData& DBItemData::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBItemData* DBItemData::New(::google::protobuf::Arena* arena) const {
  DBItemData* n = new DBItemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBItemData)
  ::memset(&unique_id_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&unique_id_) + sizeof(num_));
}

bool DBItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 unique_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &unique_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBItemData)
  return false;
#undef DO_
}

void DBItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBItemData)
  // int32 type_id = 1;
  if (this->type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // int64 unique_id = 2;
  if (this->unique_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->unique_id(), output);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBItemData)
}

::google::protobuf::uint8* DBItemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBItemData)
  // int32 type_id = 1;
  if (this->type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // int64 unique_id = 2;
  if (this->unique_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->unique_id(), target);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBItemData)
  return target;
}

size_t DBItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBItemData)
  size_t total_size = 0;

  // int64 unique_id = 2;
  if (this->unique_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->unique_id());
  }

  // int32 type_id = 1;
  if (this->type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_id());
  }

  // int32 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBItemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBItemData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBItemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBItemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBItemData)
    MergeFrom(*source);
  }
}

void DBItemData::MergeFrom(const DBItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.unique_id() != 0) {
    set_unique_id(from.unique_id());
  }
  if (from.type_id() != 0) {
    set_type_id(from.type_id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void DBItemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBItemData::CopyFrom(const DBItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBItemData::IsInitialized() const {
  return true;
}

void DBItemData::Swap(DBItemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBItemData::InternalSwap(DBItemData* other) {
  std::swap(unique_id_, other->unique_id_);
  std::swap(type_id_, other->type_id_);
  std::swap(num_, other->num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBItemData::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBItemData

// int32 type_id = 1;
void DBItemData::clear_type_id() {
  type_id_ = 0;
}
::google::protobuf::int32 DBItemData::type_id() const {
  // @@protoc_insertion_point(field_get:DBItemData.type_id)
  return type_id_;
}
void DBItemData::set_type_id(::google::protobuf::int32 value) {
  
  type_id_ = value;
  // @@protoc_insertion_point(field_set:DBItemData.type_id)
}

// int64 unique_id = 2;
void DBItemData::clear_unique_id() {
  unique_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DBItemData::unique_id() const {
  // @@protoc_insertion_point(field_get:DBItemData.unique_id)
  return unique_id_;
}
void DBItemData::set_unique_id(::google::protobuf::int64 value) {
  
  unique_id_ = value;
  // @@protoc_insertion_point(field_set:DBItemData.unique_id)
}

// int32 num = 3;
void DBItemData::clear_num() {
  num_ = 0;
}
::google::protobuf::int32 DBItemData::num() const {
  // @@protoc_insertion_point(field_get:DBItemData.num)
  return num_;
}
void DBItemData::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:DBItemData.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBItemDataList::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBItemDataList::DBItemDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBItemDataList)
}
DBItemDataList::DBItemDataList(const DBItemDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& DBItemDataList_ItemsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[1].descriptor;
  items_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  items_.SetEntryDescriptor(
      &DBItemDataList_ItemsEntry_descriptor);
  items_.MergeFrom(from.items_);
  // @@protoc_insertion_point(copy_constructor:DBItemDataList)
}

void DBItemDataList::SharedCtor() {
  const ::google::protobuf::Descriptor*& DBItemDataList_ItemsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[1].descriptor;
  items_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  items_.SetEntryDescriptor(
      &DBItemDataList_ItemsEntry_descriptor);
  _cached_size_ = 0;
}

DBItemDataList::~DBItemDataList() {
  // @@protoc_insertion_point(destructor:DBItemDataList)
  SharedDtor();
}

void DBItemDataList::SharedDtor() {
}

void DBItemDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBItemDataList::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[2].descriptor;
}

const DBItemDataList& DBItemDataList::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBItemDataList* DBItemDataList::New(::google::protobuf::Arena* arena) const {
  DBItemDataList* n = new DBItemDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBItemDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBItemDataList)
  items_.Clear();
}

bool DBItemDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBItemDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .DBItemData> items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DBItemDataList_ItemsEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int64, ::DBItemData,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData > > parser(&items_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBItemDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBItemDataList)
  return false;
#undef DO_
}

void DBItemDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBItemDataList)
  // map<int64, .DBItemData> items = 1;
  if (!this->items().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->items().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->items().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_iterator
          it = this->items().begin();
          it != this->items().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBItemDataList_ItemsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(items_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<DBItemDataList_ItemsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_iterator
          it = this->items().begin();
          it != this->items().end(); ++it) {
        entry.reset(items_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:DBItemDataList)
}

::google::protobuf::uint8* DBItemDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBItemDataList)
  // map<int64, .DBItemData> items = 1;
  if (!this->items().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->items().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->items().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_iterator
          it = this->items().begin();
          it != this->items().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBItemDataList_ItemsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(items_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<DBItemDataList_ItemsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_iterator
          it = this->items().begin();
          it != this->items().end(); ++it) {
        entry.reset(items_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBItemDataList)
  return target;
}

size_t DBItemDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBItemDataList)
  size_t total_size = 0;

  // map<int64, .DBItemData> items = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->items_size());
  {
    ::google::protobuf::scoped_ptr<DBItemDataList_ItemsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >::const_iterator
        it = this->items().begin();
        it != this->items().end(); ++it) {
      entry.reset(items_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBItemDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBItemDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBItemDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBItemDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBItemDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBItemDataList)
    MergeFrom(*source);
  }
}

void DBItemDataList::MergeFrom(const DBItemDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBItemDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  items_.MergeFrom(from.items_);
}

void DBItemDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBItemDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBItemDataList::CopyFrom(const DBItemDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBItemDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBItemDataList::IsInitialized() const {
  return true;
}

void DBItemDataList::Swap(DBItemDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBItemDataList::InternalSwap(DBItemDataList* other) {
  items_.Swap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBItemDataList::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBItemDataList

// map<int64, .DBItemData> items = 1;
int DBItemDataList::items_size() const {
  return items_.size();
}
void DBItemDataList::clear_items() {
  items_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >&
DBItemDataList::items() const {
  // @@protoc_insertion_point(field_map:DBItemDataList.items)
  return items_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, ::DBItemData >*
DBItemDataList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:DBItemDataList.items)
  return items_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillData::kSkillIdFieldNumber;
const int DBSkillData::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillData::DBSkillData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillData)
}
DBSkillData::DBSkillData(const DBSkillData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skill_id_, &from.skill_id_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&skill_id_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:DBSkillData)
}

void DBSkillData::SharedCtor() {
  ::memset(&skill_id_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&skill_id_) + sizeof(level_));
  _cached_size_ = 0;
}

DBSkillData::~DBSkillData() {
  // @@protoc_insertion_point(destructor:DBSkillData)
  SharedDtor();
}

void DBSkillData::SharedDtor() {
}

void DBSkillData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillData::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[3].descriptor;
}

const DBSkillData& DBSkillData::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBSkillData* DBSkillData::New(::google::protobuf::Arena* arena) const {
  DBSkillData* n = new DBSkillData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillData)
  ::memset(&skill_id_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&skill_id_) + sizeof(level_));
}

bool DBSkillData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 skill_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillData)
  return false;
#undef DO_
}

void DBSkillData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillData)
  // int32 skill_id = 1;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }

  // int32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBSkillData)
}

::google::protobuf::uint8* DBSkillData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillData)
  // int32 skill_id = 1;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }

  // int32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBSkillData)
  return target;
}

size_t DBSkillData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillData)
  size_t total_size = 0;

  // int32 skill_id = 1;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skill_id());
  }

  // int32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBSkillData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillData)
    MergeFrom(*source);
  }
}

void DBSkillData::MergeFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void DBSkillData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillData::CopyFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillData::IsInitialized() const {
  return true;
}

void DBSkillData::Swap(DBSkillData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillData::InternalSwap(DBSkillData* other) {
  std::swap(skill_id_, other->skill_id_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillData::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBSkillData

// int32 skill_id = 1;
void DBSkillData::clear_skill_id() {
  skill_id_ = 0;
}
::google::protobuf::int32 DBSkillData::skill_id() const {
  // @@protoc_insertion_point(field_get:DBSkillData.skill_id)
  return skill_id_;
}
void DBSkillData::set_skill_id(::google::protobuf::int32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:DBSkillData.skill_id)
}

// int32 level = 2;
void DBSkillData::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 DBSkillData::level() const {
  // @@protoc_insertion_point(field_get:DBSkillData.level)
  return level_;
}
void DBSkillData::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:DBSkillData.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillDataList::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillDataList::DBSkillDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillDataList)
}
DBSkillDataList::DBSkillDataList(const DBSkillDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& DBSkillDataList_SkillsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[4].descriptor;
  skills_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  skills_.SetEntryDescriptor(
      &DBSkillDataList_SkillsEntry_descriptor);
  skills_.MergeFrom(from.skills_);
  // @@protoc_insertion_point(copy_constructor:DBSkillDataList)
}

void DBSkillDataList::SharedCtor() {
  const ::google::protobuf::Descriptor*& DBSkillDataList_SkillsEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[4].descriptor;
  skills_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  skills_.SetEntryDescriptor(
      &DBSkillDataList_SkillsEntry_descriptor);
  _cached_size_ = 0;
}

DBSkillDataList::~DBSkillDataList() {
  // @@protoc_insertion_point(destructor:DBSkillDataList)
  SharedDtor();
}

void DBSkillDataList::SharedDtor() {
}

void DBSkillDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillDataList::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[5].descriptor;
}

const DBSkillDataList& DBSkillDataList::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBSkillDataList* DBSkillDataList::New(::google::protobuf::Arena* arena) const {
  DBSkillDataList* n = new DBSkillDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillDataList)
  skills_.Clear();
}

bool DBSkillDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .DBSkillData> skills = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DBSkillDataList_SkillsEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::DBSkillData,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData > > parser(&skills_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillDataList)
  return false;
#undef DO_
}

void DBSkillDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillDataList)
  // map<int32, .DBSkillData> skills = 1;
  if (!this->skills().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skills().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skills().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_iterator
          it = this->skills().begin();
          it != this->skills().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBSkillDataList_SkillsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skills_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<DBSkillDataList_SkillsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_iterator
          it = this->skills().begin();
          it != this->skills().end(); ++it) {
        entry.reset(skills_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:DBSkillDataList)
}

::google::protobuf::uint8* DBSkillDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillDataList)
  // map<int32, .DBSkillData> skills = 1;
  if (!this->skills().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skills().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skills().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_iterator
          it = this->skills().begin();
          it != this->skills().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBSkillDataList_SkillsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skills_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<DBSkillDataList_SkillsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_iterator
          it = this->skills().begin();
          it != this->skills().end(); ++it) {
        entry.reset(skills_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBSkillDataList)
  return target;
}

size_t DBSkillDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillDataList)
  size_t total_size = 0;

  // map<int32, .DBSkillData> skills = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skills_size());
  {
    ::google::protobuf::scoped_ptr<DBSkillDataList_SkillsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >::const_iterator
        it = this->skills().begin();
        it != this->skills().end(); ++it) {
      entry.reset(skills_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBSkillDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillDataList)
    MergeFrom(*source);
  }
}

void DBSkillDataList::MergeFrom(const DBSkillDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skills_.MergeFrom(from.skills_);
}

void DBSkillDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillDataList::CopyFrom(const DBSkillDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillDataList::IsInitialized() const {
  return true;
}

void DBSkillDataList::Swap(DBSkillDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillDataList::InternalSwap(DBSkillDataList* other) {
  skills_.Swap(&other->skills_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillDataList::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBSkillDataList

// map<int32, .DBSkillData> skills = 1;
int DBSkillDataList::skills_size() const {
  return skills_.size();
}
void DBSkillDataList::clear_skills() {
  skills_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >&
DBSkillDataList::skills() const {
  // @@protoc_insertion_point(field_map:DBSkillDataList.skills)
  return skills_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::DBSkillData >*
DBSkillDataList::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_map:DBSkillDataList.skills)
  return skills_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskData::kTaskIdFieldNumber;
const int DBTaskData::kTaskStateFieldNumber;
const int DBTaskData::kTaskParamFieldNumber;
const int DBTaskData::kTaskParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskData::DBTaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskData)
}
DBTaskData::DBTaskData(const DBTaskData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    reinterpret_cast<char*>(&task_param2_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param2_));
  // @@protoc_insertion_point(copy_constructor:DBTaskData)
}

void DBTaskData::SharedCtor() {
  ::memset(&task_id_, 0, reinterpret_cast<char*>(&task_param2_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param2_));
  _cached_size_ = 0;
}

DBTaskData::~DBTaskData() {
  // @@protoc_insertion_point(destructor:DBTaskData)
  SharedDtor();
}

void DBTaskData::SharedDtor() {
}

void DBTaskData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskData::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[6].descriptor;
}

const DBTaskData& DBTaskData::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBTaskData* DBTaskData::New(::google::protobuf::Arena* arena) const {
  DBTaskData* n = new DBTaskData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskData)
  ::memset(&task_id_, 0, reinterpret_cast<char*>(&task_param2_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param2_));
}

bool DBTaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_param2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_param2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskData)
  return false;
#undef DO_
}

void DBTaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskData)
  // int32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_state(), output);
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->task_param(), output);
  }

  // int32 task_param2 = 4;
  if (this->task_param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->task_param2(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBTaskData)
}

::google::protobuf::uint8* DBTaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskData)
  // int32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_state(), target);
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->task_param(), target);
  }

  // int32 task_param2 = 4;
  if (this->task_param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->task_param2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBTaskData)
  return target;
}

size_t DBTaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskData)
  size_t total_size = 0;

  // int32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_state());
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_param());
  }

  // int32 task_param2 = 4;
  if (this->task_param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_param2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBTaskData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskData)
    MergeFrom(*source);
  }
}

void DBTaskData::MergeFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.task_state() != 0) {
    set_task_state(from.task_state());
  }
  if (from.task_param() != 0) {
    set_task_param(from.task_param());
  }
  if (from.task_param2() != 0) {
    set_task_param2(from.task_param2());
  }
}

void DBTaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskData::CopyFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskData::IsInitialized() const {
  return true;
}

void DBTaskData::Swap(DBTaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskData::InternalSwap(DBTaskData* other) {
  std::swap(task_id_, other->task_id_);
  std::swap(task_state_, other->task_state_);
  std::swap(task_param_, other->task_param_);
  std::swap(task_param2_, other->task_param2_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskData::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBTaskData

// int32 task_id = 1;
void DBTaskData::clear_task_id() {
  task_id_ = 0;
}
::google::protobuf::int32 DBTaskData::task_id() const {
  // @@protoc_insertion_point(field_get:DBTaskData.task_id)
  return task_id_;
}
void DBTaskData::set_task_id(::google::protobuf::int32 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DBTaskData.task_id)
}

// int32 task_state = 2;
void DBTaskData::clear_task_state() {
  task_state_ = 0;
}
::google::protobuf::int32 DBTaskData::task_state() const {
  // @@protoc_insertion_point(field_get:DBTaskData.task_state)
  return task_state_;
}
void DBTaskData::set_task_state(::google::protobuf::int32 value) {
  
  task_state_ = value;
  // @@protoc_insertion_point(field_set:DBTaskData.task_state)
}

// int32 task_param = 3;
void DBTaskData::clear_task_param() {
  task_param_ = 0;
}
::google::protobuf::int32 DBTaskData::task_param() const {
  // @@protoc_insertion_point(field_get:DBTaskData.task_param)
  return task_param_;
}
void DBTaskData::set_task_param(::google::protobuf::int32 value) {
  
  task_param_ = value;
  // @@protoc_insertion_point(field_set:DBTaskData.task_param)
}

// int32 task_param2 = 4;
void DBTaskData::clear_task_param2() {
  task_param2_ = 0;
}
::google::protobuf::int32 DBTaskData::task_param2() const {
  // @@protoc_insertion_point(field_get:DBTaskData.task_param2)
  return task_param2_;
}
void DBTaskData::set_task_param2(::google::protobuf::int32 value) {
  
  task_param2_ = value;
  // @@protoc_insertion_point(field_set:DBTaskData.task_param2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskDataList::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskDataList::DBTaskDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskDataList)
}
DBTaskDataList::DBTaskDataList(const DBTaskDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& DBTaskDataList_TasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[7].descriptor;
  tasks_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  tasks_.SetEntryDescriptor(
      &DBTaskDataList_TasksEntry_descriptor);
  tasks_.MergeFrom(from.tasks_);
  // @@protoc_insertion_point(copy_constructor:DBTaskDataList)
}

void DBTaskDataList::SharedCtor() {
  const ::google::protobuf::Descriptor*& DBTaskDataList_TasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[7].descriptor;
  tasks_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  tasks_.SetEntryDescriptor(
      &DBTaskDataList_TasksEntry_descriptor);
  _cached_size_ = 0;
}

DBTaskDataList::~DBTaskDataList() {
  // @@protoc_insertion_point(destructor:DBTaskDataList)
  SharedDtor();
}

void DBTaskDataList::SharedDtor() {
}

void DBTaskDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskDataList::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[8].descriptor;
}

const DBTaskDataList& DBTaskDataList::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBTaskDataList* DBTaskDataList::New(::google::protobuf::Arena* arena) const {
  DBTaskDataList* n = new DBTaskDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskDataList)
  tasks_.Clear();
}

bool DBTaskDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .DBTaskData> tasks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DBTaskDataList_TasksEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::DBTaskData,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData > > parser(&tasks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskDataList)
  return false;
#undef DO_
}

void DBTaskDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskDataList)
  // map<int32, .DBTaskData> tasks = 1;
  if (!this->tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->tasks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBTaskDataList_TasksEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tasks_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<DBTaskDataList_TasksEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it) {
        entry.reset(tasks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:DBTaskDataList)
}

::google::protobuf::uint8* DBTaskDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskDataList)
  // map<int32, .DBTaskData> tasks = 1;
  if (!this->tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->tasks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBTaskDataList_TasksEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tasks_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<DBTaskDataList_TasksEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_iterator
          it = this->tasks().begin();
          it != this->tasks().end(); ++it) {
        entry.reset(tasks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBTaskDataList)
  return target;
}

size_t DBTaskDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskDataList)
  size_t total_size = 0;

  // map<int32, .DBTaskData> tasks = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tasks_size());
  {
    ::google::protobuf::scoped_ptr<DBTaskDataList_TasksEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >::const_iterator
        it = this->tasks().begin();
        it != this->tasks().end(); ++it) {
      entry.reset(tasks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBTaskDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskDataList)
    MergeFrom(*source);
  }
}

void DBTaskDataList::MergeFrom(const DBTaskDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tasks_.MergeFrom(from.tasks_);
}

void DBTaskDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskDataList::CopyFrom(const DBTaskDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskDataList::IsInitialized() const {
  return true;
}

void DBTaskDataList::Swap(DBTaskDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskDataList::InternalSwap(DBTaskDataList* other) {
  tasks_.Swap(&other->tasks_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskDataList::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBTaskDataList

// map<int32, .DBTaskData> tasks = 1;
int DBTaskDataList::tasks_size() const {
  return tasks_.size();
}
void DBTaskDataList::clear_tasks() {
  tasks_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >&
DBTaskDataList::tasks() const {
  // @@protoc_insertion_point(field_map:DBTaskDataList.tasks)
  return tasks_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::DBTaskData >*
DBTaskDataList::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_map:DBTaskDataList.tasks)
  return tasks_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBDailyTaskData::kTaskIdFieldNumber;
const int DBDailyTaskData::kTaskStateFieldNumber;
const int DBDailyTaskData::kTaskParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBDailyTaskData::DBDailyTaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBDailyTaskData)
}
DBDailyTaskData::DBDailyTaskData(const DBDailyTaskData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    reinterpret_cast<char*>(&task_param_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param_));
  // @@protoc_insertion_point(copy_constructor:DBDailyTaskData)
}

void DBDailyTaskData::SharedCtor() {
  ::memset(&task_id_, 0, reinterpret_cast<char*>(&task_param_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param_));
  _cached_size_ = 0;
}

DBDailyTaskData::~DBDailyTaskData() {
  // @@protoc_insertion_point(destructor:DBDailyTaskData)
  SharedDtor();
}

void DBDailyTaskData::SharedDtor() {
}

void DBDailyTaskData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDailyTaskData::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[9].descriptor;
}

const DBDailyTaskData& DBDailyTaskData::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBDailyTaskData* DBDailyTaskData::New(::google::protobuf::Arena* arena) const {
  DBDailyTaskData* n = new DBDailyTaskData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBDailyTaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBDailyTaskData)
  ::memset(&task_id_, 0, reinterpret_cast<char*>(&task_param_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(task_param_));
}

bool DBDailyTaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBDailyTaskData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 task_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBDailyTaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBDailyTaskData)
  return false;
#undef DO_
}

void DBDailyTaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBDailyTaskData)
  // int32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_state(), output);
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->task_param(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBDailyTaskData)
}

::google::protobuf::uint8* DBDailyTaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBDailyTaskData)
  // int32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_state(), target);
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->task_param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBDailyTaskData)
  return target;
}

size_t DBDailyTaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBDailyTaskData)
  size_t total_size = 0;

  // int32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  // int32 task_state = 2;
  if (this->task_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_state());
  }

  // int32 task_param = 3;
  if (this->task_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDailyTaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBDailyTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBDailyTaskData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBDailyTaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBDailyTaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBDailyTaskData)
    MergeFrom(*source);
  }
}

void DBDailyTaskData::MergeFrom(const DBDailyTaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBDailyTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.task_state() != 0) {
    set_task_state(from.task_state());
  }
  if (from.task_param() != 0) {
    set_task_param(from.task_param());
  }
}

void DBDailyTaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBDailyTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDailyTaskData::CopyFrom(const DBDailyTaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBDailyTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDailyTaskData::IsInitialized() const {
  return true;
}

void DBDailyTaskData::Swap(DBDailyTaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBDailyTaskData::InternalSwap(DBDailyTaskData* other) {
  std::swap(task_id_, other->task_id_);
  std::swap(task_state_, other->task_state_);
  std::swap(task_param_, other->task_param_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBDailyTaskData::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBDailyTaskData

// int32 task_id = 1;
void DBDailyTaskData::clear_task_id() {
  task_id_ = 0;
}
::google::protobuf::int32 DBDailyTaskData::task_id() const {
  // @@protoc_insertion_point(field_get:DBDailyTaskData.task_id)
  return task_id_;
}
void DBDailyTaskData::set_task_id(::google::protobuf::int32 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DBDailyTaskData.task_id)
}

// int32 task_state = 2;
void DBDailyTaskData::clear_task_state() {
  task_state_ = 0;
}
::google::protobuf::int32 DBDailyTaskData::task_state() const {
  // @@protoc_insertion_point(field_get:DBDailyTaskData.task_state)
  return task_state_;
}
void DBDailyTaskData::set_task_state(::google::protobuf::int32 value) {
  
  task_state_ = value;
  // @@protoc_insertion_point(field_set:DBDailyTaskData.task_state)
}

// int32 task_param = 3;
void DBDailyTaskData::clear_task_param() {
  task_param_ = 0;
}
::google::protobuf::int32 DBDailyTaskData::task_param() const {
  // @@protoc_insertion_point(field_get:DBDailyTaskData.task_param)
  return task_param_;
}
void DBDailyTaskData::set_task_param(::google::protobuf::int32 value) {
  
  task_param_ = value;
  // @@protoc_insertion_point(field_set:DBDailyTaskData.task_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBDailyTaskDataList::kDailyTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBDailyTaskDataList::DBDailyTaskDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBDailyTaskDataList)
}
DBDailyTaskDataList::DBDailyTaskDataList(const DBDailyTaskDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& DBDailyTaskDataList_DailyTasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[10].descriptor;
  daily_tasks_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  daily_tasks_.SetEntryDescriptor(
      &DBDailyTaskDataList_DailyTasksEntry_descriptor);
  daily_tasks_.MergeFrom(from.daily_tasks_);
  // @@protoc_insertion_point(copy_constructor:DBDailyTaskDataList)
}

void DBDailyTaskDataList::SharedCtor() {
  const ::google::protobuf::Descriptor*& DBDailyTaskDataList_DailyTasksEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[10].descriptor;
  daily_tasks_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  daily_tasks_.SetEntryDescriptor(
      &DBDailyTaskDataList_DailyTasksEntry_descriptor);
  _cached_size_ = 0;
}

DBDailyTaskDataList::~DBDailyTaskDataList() {
  // @@protoc_insertion_point(destructor:DBDailyTaskDataList)
  SharedDtor();
}

void DBDailyTaskDataList::SharedDtor() {
}

void DBDailyTaskDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDailyTaskDataList::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[11].descriptor;
}

const DBDailyTaskDataList& DBDailyTaskDataList::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBDailyTaskDataList* DBDailyTaskDataList::New(::google::protobuf::Arena* arena) const {
  DBDailyTaskDataList* n = new DBDailyTaskDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBDailyTaskDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBDailyTaskDataList)
  daily_tasks_.Clear();
}

bool DBDailyTaskDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBDailyTaskDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .DBDailyTaskData> daily_tasks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DBDailyTaskDataList_DailyTasksEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::DBDailyTaskData,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData > > parser(&daily_tasks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBDailyTaskDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBDailyTaskDataList)
  return false;
#undef DO_
}

void DBDailyTaskDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBDailyTaskDataList)
  // map<int32, .DBDailyTaskData> daily_tasks = 1;
  if (!this->daily_tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->daily_tasks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->daily_tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_iterator
          it = this->daily_tasks().begin();
          it != this->daily_tasks().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBDailyTaskDataList_DailyTasksEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(daily_tasks_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<DBDailyTaskDataList_DailyTasksEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_iterator
          it = this->daily_tasks().begin();
          it != this->daily_tasks().end(); ++it) {
        entry.reset(daily_tasks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:DBDailyTaskDataList)
}

::google::protobuf::uint8* DBDailyTaskDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBDailyTaskDataList)
  // map<int32, .DBDailyTaskData> daily_tasks = 1;
  if (!this->daily_tasks().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->daily_tasks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->daily_tasks().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_iterator
          it = this->daily_tasks().begin();
          it != this->daily_tasks().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBDailyTaskDataList_DailyTasksEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(daily_tasks_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<DBDailyTaskDataList_DailyTasksEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_iterator
          it = this->daily_tasks().begin();
          it != this->daily_tasks().end(); ++it) {
        entry.reset(daily_tasks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBDailyTaskDataList)
  return target;
}

size_t DBDailyTaskDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBDailyTaskDataList)
  size_t total_size = 0;

  // map<int32, .DBDailyTaskData> daily_tasks = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->daily_tasks_size());
  {
    ::google::protobuf::scoped_ptr<DBDailyTaskDataList_DailyTasksEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >::const_iterator
        it = this->daily_tasks().begin();
        it != this->daily_tasks().end(); ++it) {
      entry.reset(daily_tasks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDailyTaskDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBDailyTaskDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBDailyTaskDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBDailyTaskDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBDailyTaskDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBDailyTaskDataList)
    MergeFrom(*source);
  }
}

void DBDailyTaskDataList::MergeFrom(const DBDailyTaskDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBDailyTaskDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  daily_tasks_.MergeFrom(from.daily_tasks_);
}

void DBDailyTaskDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBDailyTaskDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDailyTaskDataList::CopyFrom(const DBDailyTaskDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBDailyTaskDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDailyTaskDataList::IsInitialized() const {
  return true;
}

void DBDailyTaskDataList::Swap(DBDailyTaskDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBDailyTaskDataList::InternalSwap(DBDailyTaskDataList* other) {
  daily_tasks_.Swap(&other->daily_tasks_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBDailyTaskDataList::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBDailyTaskDataList

// map<int32, .DBDailyTaskData> daily_tasks = 1;
int DBDailyTaskDataList::daily_tasks_size() const {
  return daily_tasks_.size();
}
void DBDailyTaskDataList::clear_daily_tasks() {
  daily_tasks_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >&
DBDailyTaskDataList::daily_tasks() const {
  // @@protoc_insertion_point(field_map:DBDailyTaskDataList.daily_tasks)
  return daily_tasks_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::DBDailyTaskData >*
DBDailyTaskDataList::mutable_daily_tasks() {
  // @@protoc_insertion_point(field_mutable_map:DBDailyTaskDataList.daily_tasks)
  return daily_tasks_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivityData::kActivityIdFieldNumber;
const int DBActivityData::kActivityStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivityData::DBActivityData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivityData)
}
DBActivityData::DBActivityData(const DBActivityData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&activity_id_, &from.activity_id_,
    reinterpret_cast<char*>(&activity_state_) -
    reinterpret_cast<char*>(&activity_id_) + sizeof(activity_state_));
  // @@protoc_insertion_point(copy_constructor:DBActivityData)
}

void DBActivityData::SharedCtor() {
  ::memset(&activity_id_, 0, reinterpret_cast<char*>(&activity_state_) -
    reinterpret_cast<char*>(&activity_id_) + sizeof(activity_state_));
  _cached_size_ = 0;
}

DBActivityData::~DBActivityData() {
  // @@protoc_insertion_point(destructor:DBActivityData)
  SharedDtor();
}

void DBActivityData::SharedDtor() {
}

void DBActivityData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivityData::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[12].descriptor;
}

const DBActivityData& DBActivityData::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBActivityData* DBActivityData::New(::google::protobuf::Arena* arena) const {
  DBActivityData* n = new DBActivityData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivityData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivityData)
  ::memset(&activity_id_, 0, reinterpret_cast<char*>(&activity_state_) -
    reinterpret_cast<char*>(&activity_id_) + sizeof(activity_state_));
}

bool DBActivityData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivityData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 activity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 activity_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivityData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivityData)
  return false;
#undef DO_
}

void DBActivityData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivityData)
  // int32 activity_id = 1;
  if (this->activity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }

  // int32 activity_state = 2;
  if (this->activity_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_state(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBActivityData)
}

::google::protobuf::uint8* DBActivityData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivityData)
  // int32 activity_id = 1;
  if (this->activity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }

  // int32 activity_state = 2;
  if (this->activity_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBActivityData)
  return target;
}

size_t DBActivityData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivityData)
  size_t total_size = 0;

  // int32 activity_id = 1;
  if (this->activity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activity_id());
  }

  // int32 activity_state = 2;
  if (this->activity_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activity_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivityData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBActivityData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivityData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivityData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivityData)
    MergeFrom(*source);
  }
}

void DBActivityData::MergeFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.activity_id() != 0) {
    set_activity_id(from.activity_id());
  }
  if (from.activity_state() != 0) {
    set_activity_state(from.activity_state());
  }
}

void DBActivityData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivityData::CopyFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivityData::IsInitialized() const {
  return true;
}

void DBActivityData::Swap(DBActivityData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivityData::InternalSwap(DBActivityData* other) {
  std::swap(activity_id_, other->activity_id_);
  std::swap(activity_state_, other->activity_state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivityData::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBActivityData

// int32 activity_id = 1;
void DBActivityData::clear_activity_id() {
  activity_id_ = 0;
}
::google::protobuf::int32 DBActivityData::activity_id() const {
  // @@protoc_insertion_point(field_get:DBActivityData.activity_id)
  return activity_id_;
}
void DBActivityData::set_activity_id(::google::protobuf::int32 value) {
  
  activity_id_ = value;
  // @@protoc_insertion_point(field_set:DBActivityData.activity_id)
}

// int32 activity_state = 2;
void DBActivityData::clear_activity_state() {
  activity_state_ = 0;
}
::google::protobuf::int32 DBActivityData::activity_state() const {
  // @@protoc_insertion_point(field_get:DBActivityData.activity_state)
  return activity_state_;
}
void DBActivityData::set_activity_state(::google::protobuf::int32 value) {
  
  activity_state_ = value;
  // @@protoc_insertion_point(field_set:DBActivityData.activity_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivitiesDataList::kActivitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivitiesDataList::DBActivitiesDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_5fstruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivitiesDataList)
}
DBActivitiesDataList::DBActivitiesDataList(const DBActivitiesDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& DBActivitiesDataList_ActivitiesEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[13].descriptor;
  activities_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  activities_.SetEntryDescriptor(
      &DBActivitiesDataList_ActivitiesEntry_descriptor);
  activities_.MergeFrom(from.activities_);
  // @@protoc_insertion_point(copy_constructor:DBActivitiesDataList)
}

void DBActivitiesDataList::SharedCtor() {
  const ::google::protobuf::Descriptor*& DBActivitiesDataList_ActivitiesEntry_descriptor = protobuf_db_5fstruct_2eproto::file_level_metadata[13].descriptor;
  activities_.SetAssignDescriptorCallback(
      protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce);
  activities_.SetEntryDescriptor(
      &DBActivitiesDataList_ActivitiesEntry_descriptor);
  _cached_size_ = 0;
}

DBActivitiesDataList::~DBActivitiesDataList() {
  // @@protoc_insertion_point(destructor:DBActivitiesDataList)
  SharedDtor();
}

void DBActivitiesDataList::SharedDtor() {
}

void DBActivitiesDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivitiesDataList::descriptor() {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[14].descriptor;
}

const DBActivitiesDataList& DBActivitiesDataList::default_instance() {
  protobuf_db_5fstruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBActivitiesDataList* DBActivitiesDataList::New(::google::protobuf::Arena* arena) const {
  DBActivitiesDataList* n = new DBActivitiesDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivitiesDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivitiesDataList)
  activities_.Clear();
}

bool DBActivitiesDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivitiesDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .DBActivityData> activities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DBActivitiesDataList_ActivitiesEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::DBActivityData,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData > > parser(&activities_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivitiesDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivitiesDataList)
  return false;
#undef DO_
}

void DBActivitiesDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivitiesDataList)
  // map<int32, .DBActivityData> activities = 1;
  if (!this->activities().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->activities().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->activities().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_iterator
          it = this->activities().begin();
          it != this->activities().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBActivitiesDataList_ActivitiesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(activities_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<DBActivitiesDataList_ActivitiesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_iterator
          it = this->activities().begin();
          it != this->activities().end(); ++it) {
        entry.reset(activities_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:DBActivitiesDataList)
}

::google::protobuf::uint8* DBActivitiesDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivitiesDataList)
  // map<int32, .DBActivityData> activities = 1;
  if (!this->activities().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->activities().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->activities().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_iterator
          it = this->activities().begin();
          it != this->activities().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DBActivitiesDataList_ActivitiesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(activities_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<DBActivitiesDataList_ActivitiesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_iterator
          it = this->activities().begin();
          it != this->activities().end(); ++it) {
        entry.reset(activities_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBActivitiesDataList)
  return target;
}

size_t DBActivitiesDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivitiesDataList)
  size_t total_size = 0;

  // map<int32, .DBActivityData> activities = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->activities_size());
  {
    ::google::protobuf::scoped_ptr<DBActivitiesDataList_ActivitiesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >::const_iterator
        it = this->activities().begin();
        it != this->activities().end(); ++it) {
      entry.reset(activities_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivitiesDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivitiesDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBActivitiesDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivitiesDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivitiesDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivitiesDataList)
    MergeFrom(*source);
  }
}

void DBActivitiesDataList::MergeFrom(const DBActivitiesDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivitiesDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activities_.MergeFrom(from.activities_);
}

void DBActivitiesDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivitiesDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivitiesDataList::CopyFrom(const DBActivitiesDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivitiesDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivitiesDataList::IsInitialized() const {
  return true;
}

void DBActivitiesDataList::Swap(DBActivitiesDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivitiesDataList::InternalSwap(DBActivitiesDataList* other) {
  activities_.Swap(&other->activities_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivitiesDataList::GetMetadata() const {
  protobuf_db_5fstruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_5fstruct_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBActivitiesDataList

// map<int32, .DBActivityData> activities = 1;
int DBActivitiesDataList::activities_size() const {
  return activities_.size();
}
void DBActivitiesDataList::clear_activities() {
  activities_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >&
DBActivitiesDataList::activities() const {
  // @@protoc_insertion_point(field_map:DBActivitiesDataList.activities)
  return activities_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::DBActivityData >*
DBActivitiesDataList::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_map:DBActivitiesDataList.activities)
  return activities_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
