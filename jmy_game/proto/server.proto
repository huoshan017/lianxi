syntax="proto3";
import "common.proto";
//import "db_field_struct.proto";

enum MsgIdTypeServer {
	MSGID_SERVER_NONE					= 0;
	MSGID_SERVER_ERROR					= 1;

	/* LoginServer <-> GateServer */
	MSGID_GT2LS_CONNECT_LOGIN_REQUEST		= 20000;
	MSGID_LS2GT_CONNECT_LOGIN_RESPONSE		= 20001;
	MSGID_LS2GT_SELECTED_SERVER_NOTIFY		= 20002;
	MSGID_GT2LS_SELECTED_SERVER_RESPONSE	= 20003;

	/* GateServer <-> ConfigServer */
	MSGID_GT2CS_CONNECT_CONFIG_REQUEST		= 20100;
	MSGID_CS2GT_CONNECT_CONFIG_RESPONSE		= 20101;
	MSGID_CS2GT_NEW_LOGIN_NOTIFY			= 20102;
	MSGID_CS2GT_REMOVE_LOGIN_NOTIFY			= 20103;

	/* LoginServer <-> ConfigServer */
	MSGID_LS2CS_CONNECT_CONFIG_REQUEST		= 20110;
	MSGID_CS2LS_CONNECT_CONFIG_RESPONSE		= 20111;
	MSGID_CS2LS_GATE_CONF_LIST_NOTIFY		= 20112;

	/* GateServer <-> GameServer */
	MSGID_GS2GT_CONNECT_GATE_REQUEST		= 20200;
	MSGID_GT2GS_CONNECT_GATE_RESPONSE		= 20201;

	MSGID_GT2GS_GET_ROLE_REQUEST			= 20202; // get role request
	MSGID_GS2GT_GET_ROLE_RESPONSE			= 20203; // get role response
	MSGID_GT2GS_CREATE_ROLE_REQUEST			= 20204; // create role request
	MSGID_GS2GT_CREATE_ROLE_RESPONSE		= 20205; // create role response
	//MSGID_GT2GS_DELETE_ROLE_REQUEST		= 20206; // delete role request
	//MSGID_GS2GT_DELETE_ROLE_RESPOSNE		= 20207; // delete role response
	MSGID_GT2GS_ENTER_GAME_REQUEST			= 20210; // enter game request
	MSGID_GS2GT_ENTER_GAME_RESPONSE			= 20211; // enter game response
	MSGID_GT2GS_LEAVE_GAME_REQUEST			= 20212; // leave game request
	MSGID_GS2GT_LEAVE_GAME_RESPONSE			= 20213; // leave game response

	/* GameServer <-> DBServer */
	MSGID_GS2DS_CONNECT_DB_REQUEST			= 25000;
	MSGID_DS2GS_CONNECT_DB_RESPONSE			= 25001;
	MSGID_GS2DS_GET_ROLE_REQUEST			= 25010; // get role request
	MSGID_DS2GS_GET_ROLE_RESPONSE			= 25011; // get role response
	MSGID_GS2DS_CREATE_ROLE_REQUEST			= 25012; // create role request
	MSGID_DS2GS_CREATE_ROLE_RESPONSE		= 25013; // create role response
	//MSGID_GS2DS_DELETE_ROLE_REQUEST		= 25014; // delete role request
	//MSGID_DS2GS_DELETE_ROLE_RESPONSE		= 25015; // delete role response

	MSGID_GS2DS_SET_ROLE_DATA_REQUEST		= 25100; // set role data request
	MSGID_DS2GS_SET_ROLE_DATA_RESPONSE		= 25101; // set role data response
}

/*** LoginServer <-> GateServer ***/
// gate -> login  [MSGID_GT2LS_CONNECT_REQUEST]  gate connect login request
message MsgGT2LS_ConnectLoginRequest {
	int32 gate_server_id = 1;
 	string gate_server_ip = 2;
	int32 gate_server_port = 3;
}

// login -> gate  [MSGID_LS2GT_CONNECT_RESPONSE]  response for gate connect login request
message MsgLS2GT_ConnectLoginResponse {
	int32 login_id = 1;
}

// login -> gate  [MSGID_LS2GT_SELECTED_SERVER_NOTIFY]  selected server
message MsgLS2GT_SelectedServerNotify {
	string account = 1;
	//bytes session_code = 2;
}

// gate -> login  [MSGID_GT2LS_SELECTED_SERVER_RESPONSE]  response for selected server
message MsgGT2LS_SelectedServerResponse {
	string account = 1;
	string session_code = 2;
}

/*** ConfigServer <-> GateServer ***/
// gate -> config  [MSGID_GT2CS_CONNECT_REQUEST]  gate connect config request
message MsgGT2CS_ConnectConfigRequest {
	int32 gate_id = 1;
	string gate_ip = 2;
	int32 gate_port = 3;
}

message MsgLoginInfoData {
	string login_ip = 1;
	int32 login_port = 2;
	int32 login_id = 3;
}

// config -> gate  [MSGID_CS2GT_CONNECT_RESPONSE]
message MsgCS2GT_ConnectConfigResponse {
	repeated MsgLoginInfoData login_list = 1;
}

// config -> gate  [MSGID_CS2GT_NEW_LOGIN_NOTIFY]
message MsgCS2GT_NewLoginNotify {
	MsgLoginInfoData login_data = 1;
}

// config -> gate  [MSGID_CS2GT_REMOVE_LOGIN_NOTIFY]
message MsgCS2GT_RemoveLoginNotify {
	int32 login_id = 1;
}

/*** ConfigServer <-> LoginServer ***/
// login -> config  [MSGID_LS2CS_CONNECT_REQUEST]
message MsgLS2CS_ConnectConfigRequest {
	int32 login_id = 1;
	string login_ip = 2;
	int32 login_port = 3;
}

message MsgGateConfData {
	bytes name = 1;
	int32 id = 2;
	string ip = 3;
	int32 port = 4;
	string platform = 5;
	string channel_code = 6;
	bool is_busy = 7;
	bool is_maintenance = 8;
}

// config -> login  [MSGID_CS2LS_CONNECT_RESPONSE]
message MsgCS2LS_ConnectConfigResponse {
	repeated MsgGateConfData gate_list = 1;
}

// config -> login  [MSGID_CS2LS_GATE_CONF_LIST_NOTIFY]
message MsgCS2LS_GateConfListNotify {
	repeated MsgGateConfData gate_list = 1;
}

/* GateServer <-> GameServer */
// game -> gate  [MSGID_GS2GT_CONNECT_GATE_REQUEST]
message MsgGS2GT_ConnectGateRequest {
	int32 game_id = 1;
}

// gate -> game  [MSGID_GT2GS_CONNECT_GATE_RESPONSE]
message MsgGT2GS_ConnectGateResponse {
	int32 max_user_count = 1;
	int32 start_user_id = 2;
}

// gate -> game  [MSGID_GT2GS_GET_ROLE_REQUEST]
message MsgGT2GS_GetRoleRequest {
	string account = 1;
}

// game -> gate  [MSGID_GS2GT_GET_ROLE_RESPONSE]
message MsgGS2GT_GetRoleResponse {
	string account = 1;
	MsgBaseRoleData role_data = 2;
}

// gate -> game  [MSGID_GT2GS_CREATE_ROLE_REQUEST]
message MsgGT2GS_CreateRoleRequest {
	string account = 1;
	bytes nick_name = 2;
	int32 sex = 3;
	int32 race = 4;
}

// game -> gate  [MSGID_GS2GT_CREATE_ROLE_RESPONSE]
message MsgGS2GT_CreateRoleResponse {
	string account = 1;
	MsgBaseRoleData role_data = 2;
}

// gate -> game  [MSGID_GT2GS_DELETE_ROLE_REQUEST]
//message MsgGT2GS_DeleteRoleRequest {
//	bytes account = 1;
//	uint64 role_id = 2;
//}

// game -> gate  [MSGID_GS2GT_DELETE_ROLE_RESPONSE]
//message MsgGS2GT_DeleteRoleResponse {
//	bytes account = 1;
//	uint64 role_id = 2;
//}

// gate -> game  [MSGID_GT2GS_ENTER_GAME_REQUEST]
message MsgGT2GS_EnterGameRequest {
	uint64 role_id = 1;
}

// game -> gate  [MSGID_GS2GT_ENTER_GAME_RESPONSE]
message MsgGS2GT_EnterGameResponse {
	uint64 role_id = 1;
}

// gate -> game  [MSGID_GT2GS_LEAVE_GAME_REQUEST]
message MsgGT2GS_LeaveGameRequest {
	uint64 role_id = 1;
}

// game -> gate  [MSGID_GS2GT_LEAVE_GAME_RESPONSE]
message MsgGS2GT_LeaveGameResponse {
	uint64 role_id = 1;
}

/* DBServer <-> GameServer */
// game -> db  [MSGID_GS2DS_CONNECT_DB_REQUEST]
message MsgGS2DS_ConnectDBRequest {
	int32 game_id = 1;
}

// db -> game  [MSGID_DS2GS_CONNECT_DB_RESPONSE]
message MsgDS2GS_ConnectDBResponse {
}

// game -> db  [MSGID_GS2DS_GET_ROLE_REQUEST]
message MsgGS2DS_GetRoleRequest {
	string account = 1;
}

// db -> game  [MSGID_DS2GS_GET_ROLE_RESPONSE]
message MsgDS2GS_GetRoleResponse {
	string account = 1;
	MsgBaseRoleData role_data = 2;
}

// game -> db  [MSGID_GS2DS_CREATE_ROLE_REQUEST]
message MsgGS2DS_CreateRoleRequest {
	string account = 1;
	bytes nick_name = 2;
	int32 sex = 3;
	int32 race = 4;
}

// db -> game  [MSGID_DS2GS_CREATE_ROLE_RESPONSE]
message MsgDS2GS_CreateRoleResponse {
	string account = 1;
	MsgBaseRoleData role_data = 2;
}

// game -> db  [MSGID_GS2DS_SET_ROLE_DATA_REQUEST]
message MsgGS2DS_SetRoleDataRequest {
	uint64 role_id = 1;
	MsgBaseRoleData role_data = 2;
}

// db -> game  [MSGID_DS2GS_SET_ROLE_DATA_RESPONSE]
message MsgDS2GS_SetRoleDataResponse {
	uint64 role_id = 1;
	MsgBaseRoleData role_data = 2;
}
