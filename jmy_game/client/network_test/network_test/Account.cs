// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from account.proto</summary>
public static partial class AccountReflection {

  #region Descriptor
  /// <summary>File descriptor for account.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AccountReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1hY2NvdW50LnByb3RvIj8KFU1zZ0MyU19HZXRSb2xlUmVxdWVzdBIPCgdh",
          "Y2NvdW50GAEgASgMEhUKDWVudGVyX3Nlc3Npb24YAiABKAwiawoPTXNnQmFz",
          "ZVJvbGVEYXRhEg8KB3JvbGVfaWQYASABKAQSEQoJbmlja19uYW1lGAIgASgM",
          "EgwKBHJhY2UYAyABKAUSCwoDc2V4GAQgASgFEgoKAmhwGAUgASgFEg0KBWxl",
          "dmVsGAYgASgFIlgKFk1zZ1MyQ19HZXRSb2xlUmVzcG9uc2USGQoRcmVjb25u",
          "ZWN0X3Nlc3Npb24YASABKAwSIwoJcm9sZV9kYXRhGAIgASgLMhAuTXNnQmFz",
          "ZVJvbGVEYXRhIkgKGE1zZ0MyU19DcmVhdGVSb2xlUmVxdWVzdBIRCgluaWNr",
          "X25hbWUYASABKAwSDAoEcmFjZRgCIAEoBRILCgNzZXgYAyABKAUiQAoZTXNn",
          "UzJDX0NyZWF0ZVJvbGVSZXNwb25zZRIjCglyb2xlX2RhdGEYASABKAsyEC5N",
          "c2dCYXNlUm9sZURhdGEiKwoYTXNnQzJTX0RlbGV0ZVJvbGVSZXF1ZXN0Eg8K",
          "B3JvbGVfaWQYASABKAQiLAoZTXNnUzJDX0RlbGV0ZVJvbGVSZXNwb25zZRIP",
          "Cgdyb2xlX2lkGAEgASgEIhkKF01zZ0MyU19FbnRlckdhbWVSZXF1ZXN0IhoK",
          "GE1zZ1MyQ19FbnRlckdhbWVSZXNwb25zZSIgCh5Nc2dTMkNfRW50ZXJHYW1l",
          "Q29tcGxldGVOb3RpZnkiGQoXTXNnQzJTX0xlYXZlR2FtZVJlcXVlc3QiGgoY",
          "TXNnUzJDX0xlYXZlR2FtZVJlc3BvbnNlIkUKF01zZ0MyU19SZWNvbm5lY3RS",
          "ZXF1ZXN0Eg8KB2FjY291bnQYASABKAwSGQoRcmVjb25uZWN0X3Nlc3Npb24Y",
          "AiABKAwiNQoYTXNnUzJDX1JlY29ubmVjdFJlc3BvbnNlEhkKEXJlY29ubmVj",
          "dF9zZXNzaW9uGAEgASgMYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_GetRoleRequest), global::MsgC2S_GetRoleRequest.Parser, new[]{ "Account", "EnterSession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBaseRoleData), global::MsgBaseRoleData.Parser, new[]{ "RoleId", "NickName", "Race", "Sex", "Hp", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_GetRoleResponse), global::MsgS2C_GetRoleResponse.Parser, new[]{ "ReconnectSession", "RoleData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_CreateRoleRequest), global::MsgC2S_CreateRoleRequest.Parser, new[]{ "NickName", "Race", "Sex" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_CreateRoleResponse), global::MsgS2C_CreateRoleResponse.Parser, new[]{ "RoleData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_DeleteRoleRequest), global::MsgC2S_DeleteRoleRequest.Parser, new[]{ "RoleId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_DeleteRoleResponse), global::MsgS2C_DeleteRoleResponse.Parser, new[]{ "RoleId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_EnterGameRequest), global::MsgC2S_EnterGameRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_EnterGameResponse), global::MsgS2C_EnterGameResponse.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_EnterGameCompleteNotify), global::MsgS2C_EnterGameCompleteNotify.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_LeaveGameRequest), global::MsgC2S_LeaveGameRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_LeaveGameResponse), global::MsgS2C_LeaveGameResponse.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgC2S_ReconnectRequest), global::MsgC2S_ReconnectRequest.Parser, new[]{ "Account", "ReconnectSession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgS2C_ReconnectResponse), global::MsgS2C_ReconnectResponse.Parser, new[]{ "ReconnectSession" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// client -> gate  [MSGID_C2S_GET_ROLE_REQUEST]
/// </summary>
public sealed partial class MsgC2S_GetRoleRequest : pb::IMessage<MsgC2S_GetRoleRequest> {
  private static readonly pb::MessageParser<MsgC2S_GetRoleRequest> _parser = new pb::MessageParser<MsgC2S_GetRoleRequest>(() => new MsgC2S_GetRoleRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_GetRoleRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_GetRoleRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_GetRoleRequest(MsgC2S_GetRoleRequest other) : this() {
    account_ = other.account_;
    enterSession_ = other.enterSession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_GetRoleRequest Clone() {
    return new MsgC2S_GetRoleRequest(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private pb::ByteString account_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "enter_session" field.</summary>
  public const int EnterSessionFieldNumber = 2;
  private pb::ByteString enterSession_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString EnterSession {
    get { return enterSession_; }
    set {
      enterSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_GetRoleRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_GetRoleRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (EnterSession != other.EnterSession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (EnterSession.Length != 0) hash ^= EnterSession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Account);
    }
    if (EnterSession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(EnterSession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Account);
    }
    if (EnterSession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(EnterSession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_GetRoleRequest other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.EnterSession.Length != 0) {
      EnterSession = other.EnterSession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Account = input.ReadBytes();
          break;
        }
        case 18: {
          EnterSession = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// role list data
/// </summary>
public sealed partial class MsgBaseRoleData : pb::IMessage<MsgBaseRoleData> {
  private static readonly pb::MessageParser<MsgBaseRoleData> _parser = new pb::MessageParser<MsgBaseRoleData>(() => new MsgBaseRoleData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBaseRoleData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBaseRoleData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBaseRoleData(MsgBaseRoleData other) : this() {
    roleId_ = other.roleId_;
    nickName_ = other.nickName_;
    race_ = other.race_;
    sex_ = other.sex_;
    hp_ = other.hp_;
    level_ = other.level_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBaseRoleData Clone() {
    return new MsgBaseRoleData(this);
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 1;
  private ulong roleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong RoleId {
    get { return roleId_; }
    set {
      roleId_ = value;
    }
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 2;
  private pb::ByteString nickName_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "race" field.</summary>
  public const int RaceFieldNumber = 3;
  private int race_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Race {
    get { return race_; }
    set {
      race_ = value;
    }
  }

  /// <summary>Field number for the "sex" field.</summary>
  public const int SexFieldNumber = 4;
  private int sex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Sex {
    get { return sex_; }
    set {
      sex_ = value;
    }
  }

  /// <summary>Field number for the "hp" field.</summary>
  public const int HpFieldNumber = 5;
  private int hp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Hp {
    get { return hp_; }
    set {
      hp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 6;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBaseRoleData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBaseRoleData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleId != other.RoleId) return false;
    if (NickName != other.NickName) return false;
    if (Race != other.Race) return false;
    if (Sex != other.Sex) return false;
    if (Hp != other.Hp) return false;
    if (Level != other.Level) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleId != 0UL) hash ^= RoleId.GetHashCode();
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (Race != 0) hash ^= Race.GetHashCode();
    if (Sex != 0) hash ^= Sex.GetHashCode();
    if (Hp != 0) hash ^= Hp.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(RoleId);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(NickName);
    }
    if (Race != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Race);
    }
    if (Sex != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Sex);
    }
    if (Hp != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Hp);
    }
    if (Level != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Level);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RoleId);
    }
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(NickName);
    }
    if (Race != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Race);
    }
    if (Sex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
    }
    if (Hp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBaseRoleData other) {
    if (other == null) {
      return;
    }
    if (other.RoleId != 0UL) {
      RoleId = other.RoleId;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    if (other.Race != 0) {
      Race = other.Race;
    }
    if (other.Sex != 0) {
      Sex = other.Sex;
    }
    if (other.Hp != 0) {
      Hp = other.Hp;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RoleId = input.ReadUInt64();
          break;
        }
        case 18: {
          NickName = input.ReadBytes();
          break;
        }
        case 24: {
          Race = input.ReadInt32();
          break;
        }
        case 32: {
          Sex = input.ReadInt32();
          break;
        }
        case 40: {
          Hp = input.ReadInt32();
          break;
        }
        case 48: {
          Level = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_GET_ROLE_RESPONSE]
/// </summary>
public sealed partial class MsgS2C_GetRoleResponse : pb::IMessage<MsgS2C_GetRoleResponse> {
  private static readonly pb::MessageParser<MsgS2C_GetRoleResponse> _parser = new pb::MessageParser<MsgS2C_GetRoleResponse>(() => new MsgS2C_GetRoleResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_GetRoleResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_GetRoleResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_GetRoleResponse(MsgS2C_GetRoleResponse other) : this() {
    reconnectSession_ = other.reconnectSession_;
    RoleData = other.roleData_ != null ? other.RoleData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_GetRoleResponse Clone() {
    return new MsgS2C_GetRoleResponse(this);
  }

  /// <summary>Field number for the "reconnect_session" field.</summary>
  public const int ReconnectSessionFieldNumber = 1;
  private pb::ByteString reconnectSession_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ReconnectSession {
    get { return reconnectSession_; }
    set {
      reconnectSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "role_data" field.</summary>
  public const int RoleDataFieldNumber = 2;
  private global::MsgBaseRoleData roleData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgBaseRoleData RoleData {
    get { return roleData_; }
    set {
      roleData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_GetRoleResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_GetRoleResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReconnectSession != other.ReconnectSession) return false;
    if (!object.Equals(RoleData, other.RoleData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReconnectSession.Length != 0) hash ^= ReconnectSession.GetHashCode();
    if (roleData_ != null) hash ^= RoleData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReconnectSession.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(ReconnectSession);
    }
    if (roleData_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RoleData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReconnectSession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReconnectSession);
    }
    if (roleData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_GetRoleResponse other) {
    if (other == null) {
      return;
    }
    if (other.ReconnectSession.Length != 0) {
      ReconnectSession = other.ReconnectSession;
    }
    if (other.roleData_ != null) {
      if (roleData_ == null) {
        roleData_ = new global::MsgBaseRoleData();
      }
      RoleData.MergeFrom(other.RoleData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ReconnectSession = input.ReadBytes();
          break;
        }
        case 18: {
          if (roleData_ == null) {
            roleData_ = new global::MsgBaseRoleData();
          }
          input.ReadMessage(roleData_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// client -> gate  [MSGID_C2S_CREATE_ROLE_REQUEST]
/// </summary>
public sealed partial class MsgC2S_CreateRoleRequest : pb::IMessage<MsgC2S_CreateRoleRequest> {
  private static readonly pb::MessageParser<MsgC2S_CreateRoleRequest> _parser = new pb::MessageParser<MsgC2S_CreateRoleRequest>(() => new MsgC2S_CreateRoleRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_CreateRoleRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_CreateRoleRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_CreateRoleRequest(MsgC2S_CreateRoleRequest other) : this() {
    nickName_ = other.nickName_;
    race_ = other.race_;
    sex_ = other.sex_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_CreateRoleRequest Clone() {
    return new MsgC2S_CreateRoleRequest(this);
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 1;
  private pb::ByteString nickName_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "race" field.</summary>
  public const int RaceFieldNumber = 2;
  private int race_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Race {
    get { return race_; }
    set {
      race_ = value;
    }
  }

  /// <summary>Field number for the "sex" field.</summary>
  public const int SexFieldNumber = 3;
  private int sex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Sex {
    get { return sex_; }
    set {
      sex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_CreateRoleRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_CreateRoleRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NickName != other.NickName) return false;
    if (Race != other.Race) return false;
    if (Sex != other.Sex) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (Race != 0) hash ^= Race.GetHashCode();
    if (Sex != 0) hash ^= Sex.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NickName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(NickName);
    }
    if (Race != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Race);
    }
    if (Sex != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Sex);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(NickName);
    }
    if (Race != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Race);
    }
    if (Sex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_CreateRoleRequest other) {
    if (other == null) {
      return;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    if (other.Race != 0) {
      Race = other.Race;
    }
    if (other.Sex != 0) {
      Sex = other.Sex;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NickName = input.ReadBytes();
          break;
        }
        case 16: {
          Race = input.ReadInt32();
          break;
        }
        case 24: {
          Sex = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_CREATE_ROLE_RESPONSE]
/// </summary>
public sealed partial class MsgS2C_CreateRoleResponse : pb::IMessage<MsgS2C_CreateRoleResponse> {
  private static readonly pb::MessageParser<MsgS2C_CreateRoleResponse> _parser = new pb::MessageParser<MsgS2C_CreateRoleResponse>(() => new MsgS2C_CreateRoleResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_CreateRoleResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_CreateRoleResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_CreateRoleResponse(MsgS2C_CreateRoleResponse other) : this() {
    RoleData = other.roleData_ != null ? other.RoleData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_CreateRoleResponse Clone() {
    return new MsgS2C_CreateRoleResponse(this);
  }

  /// <summary>Field number for the "role_data" field.</summary>
  public const int RoleDataFieldNumber = 1;
  private global::MsgBaseRoleData roleData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgBaseRoleData RoleData {
    get { return roleData_; }
    set {
      roleData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_CreateRoleResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_CreateRoleResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RoleData, other.RoleData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (roleData_ != null) hash ^= RoleData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (roleData_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RoleData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (roleData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_CreateRoleResponse other) {
    if (other == null) {
      return;
    }
    if (other.roleData_ != null) {
      if (roleData_ == null) {
        roleData_ = new global::MsgBaseRoleData();
      }
      RoleData.MergeFrom(other.RoleData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (roleData_ == null) {
            roleData_ = new global::MsgBaseRoleData();
          }
          input.ReadMessage(roleData_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// client -> gate  [MSGID_C2S_DELETE_ROLE_REQUEST]
/// </summary>
public sealed partial class MsgC2S_DeleteRoleRequest : pb::IMessage<MsgC2S_DeleteRoleRequest> {
  private static readonly pb::MessageParser<MsgC2S_DeleteRoleRequest> _parser = new pb::MessageParser<MsgC2S_DeleteRoleRequest>(() => new MsgC2S_DeleteRoleRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_DeleteRoleRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_DeleteRoleRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_DeleteRoleRequest(MsgC2S_DeleteRoleRequest other) : this() {
    roleId_ = other.roleId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_DeleteRoleRequest Clone() {
    return new MsgC2S_DeleteRoleRequest(this);
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 1;
  private ulong roleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong RoleId {
    get { return roleId_; }
    set {
      roleId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_DeleteRoleRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_DeleteRoleRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleId != other.RoleId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleId != 0UL) hash ^= RoleId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(RoleId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RoleId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_DeleteRoleRequest other) {
    if (other == null) {
      return;
    }
    if (other.RoleId != 0UL) {
      RoleId = other.RoleId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RoleId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_DELETE_ROLE_RESPONSE]
/// </summary>
public sealed partial class MsgS2C_DeleteRoleResponse : pb::IMessage<MsgS2C_DeleteRoleResponse> {
  private static readonly pb::MessageParser<MsgS2C_DeleteRoleResponse> _parser = new pb::MessageParser<MsgS2C_DeleteRoleResponse>(() => new MsgS2C_DeleteRoleResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_DeleteRoleResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_DeleteRoleResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_DeleteRoleResponse(MsgS2C_DeleteRoleResponse other) : this() {
    roleId_ = other.roleId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_DeleteRoleResponse Clone() {
    return new MsgS2C_DeleteRoleResponse(this);
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 1;
  private ulong roleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong RoleId {
    get { return roleId_; }
    set {
      roleId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_DeleteRoleResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_DeleteRoleResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleId != other.RoleId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleId != 0UL) hash ^= RoleId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(RoleId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RoleId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_DeleteRoleResponse other) {
    if (other == null) {
      return;
    }
    if (other.RoleId != 0UL) {
      RoleId = other.RoleId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RoleId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// client -> gate  [MSGID_C2S_ENTER_GAME_REQUEST]  request enter game, send to gate server
/// </summary>
public sealed partial class MsgC2S_EnterGameRequest : pb::IMessage<MsgC2S_EnterGameRequest> {
  private static readonly pb::MessageParser<MsgC2S_EnterGameRequest> _parser = new pb::MessageParser<MsgC2S_EnterGameRequest>(() => new MsgC2S_EnterGameRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_EnterGameRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_EnterGameRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_EnterGameRequest(MsgC2S_EnterGameRequest other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_EnterGameRequest Clone() {
    return new MsgC2S_EnterGameRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_EnterGameRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_EnterGameRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_EnterGameRequest other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_ENTER_GAME_RESPONSE]  response for enter game request
/// </summary>
public sealed partial class MsgS2C_EnterGameResponse : pb::IMessage<MsgS2C_EnterGameResponse> {
  private static readonly pb::MessageParser<MsgS2C_EnterGameResponse> _parser = new pb::MessageParser<MsgS2C_EnterGameResponse>(() => new MsgS2C_EnterGameResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_EnterGameResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameResponse(MsgS2C_EnterGameResponse other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameResponse Clone() {
    return new MsgS2C_EnterGameResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_EnterGameResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_EnterGameResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_EnterGameResponse other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_ENTER_GAME_COMPLETE_NOTIFY]  enter game complete
/// </summary>
public sealed partial class MsgS2C_EnterGameCompleteNotify : pb::IMessage<MsgS2C_EnterGameCompleteNotify> {
  private static readonly pb::MessageParser<MsgS2C_EnterGameCompleteNotify> _parser = new pb::MessageParser<MsgS2C_EnterGameCompleteNotify>(() => new MsgS2C_EnterGameCompleteNotify());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_EnterGameCompleteNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameCompleteNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameCompleteNotify(MsgS2C_EnterGameCompleteNotify other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_EnterGameCompleteNotify Clone() {
    return new MsgS2C_EnterGameCompleteNotify(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_EnterGameCompleteNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_EnterGameCompleteNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_EnterGameCompleteNotify other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// client -> gate  [MSGID_C2S_LEAVE_GAME_REQUEST]
/// </summary>
public sealed partial class MsgC2S_LeaveGameRequest : pb::IMessage<MsgC2S_LeaveGameRequest> {
  private static readonly pb::MessageParser<MsgC2S_LeaveGameRequest> _parser = new pb::MessageParser<MsgC2S_LeaveGameRequest>(() => new MsgC2S_LeaveGameRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_LeaveGameRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_LeaveGameRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_LeaveGameRequest(MsgC2S_LeaveGameRequest other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_LeaveGameRequest Clone() {
    return new MsgC2S_LeaveGameRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_LeaveGameRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_LeaveGameRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_LeaveGameRequest other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_LEAVE_GAME_RESPONSE]
/// </summary>
public sealed partial class MsgS2C_LeaveGameResponse : pb::IMessage<MsgS2C_LeaveGameResponse> {
  private static readonly pb::MessageParser<MsgS2C_LeaveGameResponse> _parser = new pb::MessageParser<MsgS2C_LeaveGameResponse>(() => new MsgS2C_LeaveGameResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_LeaveGameResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_LeaveGameResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_LeaveGameResponse(MsgS2C_LeaveGameResponse other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_LeaveGameResponse Clone() {
    return new MsgS2C_LeaveGameResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_LeaveGameResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_LeaveGameResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_LeaveGameResponse other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// client -> gate  [MSGID_C2S_RECONNECT_REQUEST]  reconnect request
/// </summary>
public sealed partial class MsgC2S_ReconnectRequest : pb::IMessage<MsgC2S_ReconnectRequest> {
  private static readonly pb::MessageParser<MsgC2S_ReconnectRequest> _parser = new pb::MessageParser<MsgC2S_ReconnectRequest>(() => new MsgC2S_ReconnectRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgC2S_ReconnectRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_ReconnectRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_ReconnectRequest(MsgC2S_ReconnectRequest other) : this() {
    account_ = other.account_;
    reconnectSession_ = other.reconnectSession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgC2S_ReconnectRequest Clone() {
    return new MsgC2S_ReconnectRequest(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private pb::ByteString account_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reconnect_session" field.</summary>
  public const int ReconnectSessionFieldNumber = 2;
  private pb::ByteString reconnectSession_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ReconnectSession {
    get { return reconnectSession_; }
    set {
      reconnectSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgC2S_ReconnectRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgC2S_ReconnectRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (ReconnectSession != other.ReconnectSession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (ReconnectSession.Length != 0) hash ^= ReconnectSession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Account);
    }
    if (ReconnectSession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(ReconnectSession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Account);
    }
    if (ReconnectSession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReconnectSession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgC2S_ReconnectRequest other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.ReconnectSession.Length != 0) {
      ReconnectSession = other.ReconnectSession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Account = input.ReadBytes();
          break;
        }
        case 18: {
          ReconnectSession = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// gate -> client  [MSGID_S2C_RECONNECT_RESPONSE]  response for reconnect request
/// </summary>
public sealed partial class MsgS2C_ReconnectResponse : pb::IMessage<MsgS2C_ReconnectResponse> {
  private static readonly pb::MessageParser<MsgS2C_ReconnectResponse> _parser = new pb::MessageParser<MsgS2C_ReconnectResponse>(() => new MsgS2C_ReconnectResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgS2C_ReconnectResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AccountReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_ReconnectResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_ReconnectResponse(MsgS2C_ReconnectResponse other) : this() {
    reconnectSession_ = other.reconnectSession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgS2C_ReconnectResponse Clone() {
    return new MsgS2C_ReconnectResponse(this);
  }

  /// <summary>Field number for the "reconnect_session" field.</summary>
  public const int ReconnectSessionFieldNumber = 1;
  private pb::ByteString reconnectSession_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ReconnectSession {
    get { return reconnectSession_; }
    set {
      reconnectSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgS2C_ReconnectResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgS2C_ReconnectResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReconnectSession != other.ReconnectSession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReconnectSession.Length != 0) hash ^= ReconnectSession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReconnectSession.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(ReconnectSession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReconnectSession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReconnectSession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgS2C_ReconnectResponse other) {
    if (other == null) {
      return;
    }
    if (other.ReconnectSession.Length != 0) {
      ReconnectSession = other.ReconnectSession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ReconnectSession = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
